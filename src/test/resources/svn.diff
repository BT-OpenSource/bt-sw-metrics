Index: scripts/repeatable/#test_#packagebody_!swns_ut_eton_xml_processing.sql
===================================================================
--- scripts/repeatable/#test_#packagebody_!swns_ut_eton_xml_processing.sql	(revision 6801)
+++ scripts/repeatable/#test_#packagebody_!swns_ut_eton_xml_processing.sql	(revision 7124)
@@ -483,30 +483,36 @@
       COMMIT;
    END;
 
- /* Formatted on 14/11/2013 12:45:00 (QP5 v5.227.12220.39724) */
-PROCEDURE ut_teardown
-IS
-BEGIN
-   ut_test_util.delete_all_data;
+   
+	/* Formatted on 14/11/2013 12:45:00 (QP5 v5.227.12220.39724) */
+	PROCEDURE ut_teardown
+	IS
+	BEGIN
+	
+		ut_test_util.delete_all_data;
 
-   DELETE FROM ETON3ALL_INSPECTION;
+		DELETE FROM  eton3inspection_item;
+		DELETE FROM  eton3inspection_site;
+		DELETE FROM  eton3inspection;
 
-   DELETE FROM eton3works;
+		DELETE FROM ETON3ALL_INSPECTION;
 
-   DELETE FROM ETON3CONTRACTORDISTRICT;
+		DELETE FROM eton3works;
 
-   DELETE FROM ETON3CONTRACTOR;
+		DELETE FROM ETON3CONTRACTORDISTRICT;
 
-   DELETE FROM eton3swaorganisation;
+		DELETE FROM ETON3CONTRACTOR;
 
-   DELETE FROM eton3tempinspection;
+		DELETE FROM eton3swaorganisation;
 
-   DELETE FROM ETON3SWAMP;
+		DELETE FROM eton3tempinspection;
 
-   COMMIT;
+		DELETE FROM ETON3SWAMP;
 
- NULL;
-END;
+		COMMIT;
+	END ut_teardown;
+
+	
    PROCEDURE ut_sub_street_works_licence
    IS
       -- Verify and complete data types.
@@ -5765,132 +5771,131 @@
    -- End of test
    END ut_SUB_LOCATION_COORDINATES;
 
-   PROCEDURE ut_SUB_INSPECTION
-   IS
-      -- Verify and complete data types.
-      against_this  VARCHAR2 (2000);
-      check_this    VARCHAR2 (2000);
+    PROCEDURE ut_SUB_INSPECTION
+    IS
+        -- Verify and complete data types.
+        against_this                    VARCHAR2 (2000);
+        check_this                      VARCHAR2 (2000);
+        
+        l_rejection_reason              VARCHAR2(200);
+        l_known_works                   NUMBER(2);
+        l_inspection_notice_count       NUMBER;
+        l_temp_inspection_count         NUMBER;
+        l_notification_summary_count    NUMBER;
+        l_event_count                   NUMBER;
 
-      --l_notification_id NUMBER(5);
-      l_rejection_reason  VARCHAR2(200);
-      l_known_works     NUMBER(2);
+    BEGIN
+        -- Define "control" operation
+        against_this := NULL;
 
-      l_inspection_notice_count NUMBER;
-      l_temp_inspection_count   NUMBER;
-      l_notification_summary_count NUMBER;
-
-   BEGIN
-      -- Define "control" operation
-      against_this := NULL;
-
-      /**************************************
-      * Firstly with an invalid sender
-      ***********************************/
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 99,
-                                             P_NOTIFICATION_FROM_DIST   => 99,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => '',
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => '',
-                                             P_INSP_RESULT              => '',
-                                             P_INSP_CATEGORY            => '',
-                                             P_INSP_TYPE                => '',
-                                             P_INSP_NAME                => '',
-                                             P_INSP_DATE                => '',
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => '',
-                                             P_SITE_INFORMED            => '',
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
-       -- Assert success
-      -- Compare the two values.
-      utAssert.eq ('Test of SUB_INSPECTION with invalid sender return value',
-                   check_this,
-                   C_NO);
-
-      utAssert.eq ('Test of SUB_INSPECTION with invalid sender rejection reason' || l_rejection_reason,
+        /**************************************
+        * with an invalid sender
+        ***********************************/
+        -- Execute test code
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                P_NOTIFICATION_FROM_ORG    => 99,
+                P_NOTIFICATION_FROM_DIST   => 99,
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_INSP_RESULT              => '',
+                P_INSP_CATEGORY            => '',
+                P_INSP_TYPE                => '',
+                P_INSP_NAME                => '',
+                P_INSP_DATE                => '',
+                P_INSP_TIME                => '',
+                P_INSP_OUTCOME             => '',
+                P_SITE_INFORMED            => '',
+                P_INSP_LOGGED_CALL         => '',
+                P_SAMPLE_SITE              => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_KNOWN_WORKS              => l_known_works,
+                P_REJECTION_REASON         => l_rejection_reason
+        );
+        -- Assert success
+        -- Compare the two values.
+        utAssert.eq ('Test of SUB_INSPECTION with invalid sender return value', check_this, C_NO);
+        
+        utAssert.eq ('Test of SUB_INSPECTION with invalid sender rejection reason' || l_rejection_reason,
                    'Could not determine sender for org - 99, District - 99',
                    l_rejection_reason);
 
-      /**************************************
-      * Firstly with valid sender an unkown works
-      ***********************************/
-      -- Execute test code
+        /**************************************
+        * with valid sender an unknown works
+        ***********************************/
+        -- Execute test code
+        
+        --create an eton 3 organisation
+        ut_test_util.create_eton_3_swa_org (
+            p_swa_org_id =>999,
+            p_swa_org_ref =>'0001',
+            p_swa_org_name => 'Inspection test org'
+        );
 
-      --create an eton 3 organisation
-       ut_test_util.create_eton_3_swa_org  (p_swa_org_id =>999,
-                                            p_swa_org_ref =>'0001',
-                                            p_swa_org_name => 'Inspection test org');
+        --record how many inspeciton notices there are
+        SELECT count(*) INTO l_inspection_notice_count from INSPECTION_NOTICE;
+        SELECT count(*) INTO l_temp_inspection_count from ETON3TEMPINSPECTION;
+        SELECT count(*) INTO l_notification_summary_count from notification_summary;
 
-      --record how many inspeciton notices there are
-      SELECT count(*) INTO l_inspection_notice_count from INSPECTION_NOTICE;
-      SELECT count(*) INTO l_temp_inspection_count from ETON3TEMPINSPECTION;
-      SELECT count(*) INTO l_notification_summary_count from notification_summary;
-
-      check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 1,
-                                             P_NOTIFICATION_FROM_DIST   => 1,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => SYSDATE,
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => '',
-                                             P_INSP_RESULT              => 1,
-                                             P_INSP_CATEGORY            => 1,
-                                             P_INSP_TYPE                => 1,
-                                             P_INSP_NAME                => 'Test Name',
-                                             P_INSP_DATE                => SYSDATE,
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => '',
-                                             P_SITE_INFORMED            => '',
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
-       -- Assert success
-      -- Compare the two values.
-      utAssert.eq ('Test of SUB_INSPECTION with valid sender return value',
-                   check_this,
-                   C_YES);
-
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check inspection notice created ',
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                P_NOTIFICATION_FROM_ORG    => 1,
+                P_NOTIFICATION_FROM_DIST   => 1,
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => SYSDATE,
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_INSP_RESULT              => 1,
+                P_INSP_CATEGORY            => 1,
+                P_INSP_TYPE                => 1,
+                P_INSP_NAME                => 'Test Name',
+                P_INSP_DATE                => SYSDATE,
+                P_INSP_TIME                => '',
+                P_INSP_OUTCOME             => '',
+                P_SITE_INFORMED            => '',
+                P_INSP_LOGGED_CALL         => '',
+                P_SAMPLE_SITE              => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_KNOWN_WORKS              => l_known_works,
+                P_REJECTION_REASON         => l_rejection_reason
+        );
+        -- Assert success
+        utAssert.eq ('Test of SUB_INSPECTION with valid sender return value', check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check inspection notice created ',
                              'SELECT count(*) from inspection_notice',
                               l_inspection_notice_count + 1);
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check eton3tempinspection notice created ',
+                              
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check eton3tempinspection notice created ',
                              'SELECT count(*) from eton3tempinspection',
                               l_temp_inspection_count + 1);
 
-      --there should only be a notificaiton summary record created if there is a valid works
-      --there isnt in this test
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check notification summary NOT created ',
+        --there should only be a notificaiton summary record created if there is a valid works
+        --there isnt in this test
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with valid sender - check notification summary NOT created ',
                              'SELECT count(*) from notification_summary',
                               l_notification_summary_count);
 
 
-      /*****************************************************
-      * A test with an inspection which has a "works owner"
-      ******************************************************/
+        /*****************************************************
+        * A test with an inspection which has a "works owner"
+        ******************************************************/
         l_n_seq_num := 1;
         l_initial_id := l_initial_id +1;
         l_ns_id := l_ns_id + 1;
@@ -5897,240 +5902,321 @@
         l_works_reference := 'BC00000000INSP1';
         l_works_id := l_works_id +1 ;
         l_phase_id := l_phase_id +1 ;
-      --create a works
+        --create a works
 
-         ut_test_util.create_phase(p_works_reference =>l_works_reference,
-                               p_works_id        =>l_works_id,
-                               p_phase_id        => l_phase_id);
+        ut_test_util.create_phase(
+                    p_works_reference =>l_works_reference,
+                    p_works_id        =>l_works_id,
+                    p_phase_id        => l_phase_id
+        );
 
-         ut_test_util.CREATE_WORKS(p_works_reference  =>l_works_reference,
-                               p_works_id         =>l_works_id,
-                               p_current_phase_id =>l_phase_id,
-                               p_swa_org_ref      => '0001');
+        ut_test_util.CREATE_WORKS(
+                    p_works_reference  =>l_works_reference,
+                    p_works_id         =>l_works_id,
+                    p_current_phase_id =>l_phase_id,
+                    p_swa_org_ref      => '0001'
+        );
 
-         ut_test_util.create_notification_summary (p_works_id => l_works_id,
-                                                  P_NOTIFICATION_ID => l_initial_id,
-                                                  P_NOTIFICATION_TYPE => '0100',
-                                                  p_notification_summary_id => l_ns_id,
-                                                  P_NOTIFICATION_SEQUENCE_NUMBER => l_n_seq_num,
-                                                  p_user_id => 1);
+        ut_test_util.create_notification_summary (
+                    p_works_id => l_works_id,
+                    P_NOTIFICATION_ID => l_initial_id,
+                    P_NOTIFICATION_TYPE => '0100',
+                    p_notification_summary_id => l_ns_id,
+                    P_NOTIFICATION_SEQUENCE_NUMBER => l_n_seq_num,
+                    p_user_id => 1
+        );
 
-         --create eton3 contractor record
-          ut_test_util.create_eton_3_contractor (P_CONTRACTOR_ID =>1,
-                                P_CONTRACTOR_CODE  => '1',
-                                P_NAME             =>'None',
-                                P_STATUS           =>'A');
+        --create eton3 contractor record
+        ut_test_util.create_eton_3_contractor (
+                    P_CONTRACTOR_ID =>1,
+                    P_CONTRACTOR_CODE  => '1',
+                    P_NAME             =>'None',
+                    P_STATUS           =>'A'
+        );
 
-         --create an eton3 contractor district record
-         ut_test_util.create_eton_3_contractor_dist (P_CONTRACTOR_DISTRICT_ID =>1,
-                                          P_CONTRACTOR_ID             =>1 ,
-                                          P_DISTRICT_REF              =>'001',
-                                          P_DISTRICT_NAME             =>'1',
-                                          P_DISTRICT_ADDRESS          =>'1',
-                                          P_DISTRICT_POSTCODE         =>'1',
-                                          P_DISTRICT_TEL_NO           =>'1',
-                                          P_DISTRICT_FAX_NO           =>'1');
-         INSERT INTO ETON3SWAMP(SWAMP_ID,SWAMP_ORG_ID,SWAMP_CODE,SWAMP_NAME,SWAMP_ADDRESS,SWAMP_POSTCODE,SWAMP_TEL_NO,SWAMP_FAX_NO,TCP_IP_ADDRESS,DOMAIN_NAME,DIRECTORY_ADDRESS,STATUS  )
-                VALUES            (999, 1, 'AAA',' LOOPP','jhjh','jhjh','ne54pb','0000','0000','33333',NULL, 'A');
+        --create an eton3 contractor district record
+        ut_test_util.create_eton_3_contractor_dist (P_CONTRACTOR_DISTRICT_ID =>1,
+                    P_CONTRACTOR_ID             =>1 ,
+                    P_DISTRICT_REF              =>'001',
+                    P_DISTRICT_NAME             =>'1',
+                    P_DISTRICT_ADDRESS          =>'1',
+                    P_DISTRICT_POSTCODE         =>'1',
+                    P_DISTRICT_TEL_NO           =>'1',
+                    P_DISTRICT_FAX_NO           =>'1'
+        );
+                                      
+        INSERT INTO ETON3SWAMP(SWAMP_ID,SWAMP_ORG_ID,SWAMP_CODE,SWAMP_NAME,SWAMP_ADDRESS,SWAMP_POSTCODE,SWAMP_TEL_NO,SWAMP_FAX_NO,TCP_IP_ADDRESS,DOMAIN_NAME,DIRECTORY_ADDRESS,STATUS  )
+            VALUES            (999, 1, 'AAA',' LOOPP','jhjh','jhjh','ne54pb','0000','0000','33333',NULL, 'A');
 
-         ut_test_util.create_eton_3_works ( p_works_id => l_works_id,
-
-                                           p_swamp_id => 999,
-                                           p_batch_transaction_seq => 1000,
-                                           p_promoter_works_ref => 'dddddddd',
-                                           p_WORKS_VERSION_CREATED_DATE => '11/11/11',
-                                             p_notice_type        => 15,
-                                            p_contractor_district_id => 1);
+        ut_test_util.create_eton_3_works ( 
+                    p_works_id => l_works_id,
+                    p_swamp_id => 999,
+                    p_batch_transaction_seq => 1000,
+                    p_promoter_works_ref => 'dddddddd',
+                    p_WORKS_VERSION_CREATED_DATE => '11/11/11',
+                    p_notice_type        => 15,
+                    p_contractor_district_id => 1
+        );
 --
         SELECT count(*) INTO l_inspection_notice_count from INSPECTION_NOTICE;
         SELECT count(*) INTO l_temp_inspection_count from ETON3ALL_INSPECTION;
         SELECT count(*) INTO l_notification_summary_count from notification_summary;
+        SELECT count(*) INTO l_event_count from event where user_id = 1;
 
-         check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 1,
-                                             P_NOTIFICATION_FROM_DIST   => 1,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => SYSDATE,
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => l_works_reference,
-                                             P_INSP_RESULT              => 1,
-                                             P_INSP_CATEGORY            => 1,
-                                             P_INSP_TYPE                => 1,
-                                             P_INSP_NAME                => 'Test Name',
-                                             P_INSP_DATE                => SYSDATE,
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => '',
-                                             P_SITE_INFORMED            => '',
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                    P_NOTIFICATION_FROM_ORG    => 1,
+                    P_NOTIFICATION_FROM_DIST   => 1,
+                    P_RECIPIENT_ORG            => '',
+                    P_RECIPIENT_DIST           => '',
+                    P_NOTIFICATION_TYPE        => '2600',
+                    P_SEQUENCE_NUMBER          => '',
+                    P_VERSION_CREATED_DATIM    => SYSDATE,
+                    P_NOTIFICATION_COMMENTS    => '',
+                    P_WORKS_REFERENCE          => l_works_reference,
+                    P_INSP_RESULT              => 1,
+                    P_INSP_CATEGORY            => 1,
+                    P_INSP_TYPE                => 1,
+                    P_INSP_NAME                => 'Test Name',
+                    P_INSP_DATE                => SYSDATE,
+                    P_INSP_TIME                => '',
+                    P_INSP_OUTCOME             => '',
+                    P_SITE_INFORMED            => '',
+                    P_INSP_LOGGED_CALL         => '',
+                    P_SAMPLE_SITE              => '',
+                    P_SUPPLIER_REFERENCE       => '',
+                    P_ESTIMATE_NUMBER          => '',
+                    P_INCOMING_XML_ID          => '',
+                    P_REQUEST_SOURCE_CODE      => '',
+                    P_SCHEMA_VERSION           => '',
+                    P_NOTIFICATION_ID          => l_notification_id,
+                    P_KNOWN_WORKS              => l_known_works,
+                    P_REJECTION_REASON         => l_rejection_reason
+        );
 
-           -- Assert success
-      -- Compare the two values.
-      utAssert.eq ('Test of SUB_INSPECTION with known works return value',
-                   check_this,
-                   C_YES);
+        -- Assert success
+        utAssert.eq ('Test of SUB_INSPECTION with known works return value', check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check inspection notice created ',
+                         'SELECT count(*) from inspection_notice',
+                          l_inspection_notice_count + 1);
+                          
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check eton3tempinspection notice created ',
+                         'SELECT count(*) from ETON3ALL_INSPECTION',
+                          l_temp_inspection_count + 1);
+        
+        --there should only be a notificaiton summary record created if there is a valid works
+        --there isnt in this test
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check notification summary IS created ',
+                         'SELECT count(*) from notification_summary',
+                          l_notification_summary_count +1);
 
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check inspection notice created ',
-                             'SELECT count(*) from inspection_notice',
-                              l_inspection_notice_count + 1);
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check eton3tempinspection notice created ',
-                             'SELECT count(*) from ETON3ALL_INSPECTION',
-                              l_temp_inspection_count + 1);
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check event not created ',
+                         'SELECT count(*) from event where user_id = 1',
+                          l_event_count);
 
-      --there should only be a notificaiton summary record created if there is a valid works
-      --there isnt in this test
-      utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check notification summary IS created ',
-                             'SELECT count(*) from notification_summary',
-                              l_notification_summary_count +1);
-
       /*****************************************************
       * Create a high risk inspection
       ******************************************************/
-        check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 1,
-                                             P_NOTIFICATION_FROM_DIST   => 1,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => SYSDATE,
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => '',
-                                             P_INSP_RESULT              => 1,
-                                             P_INSP_CATEGORY            => 1,
-                                             P_INSP_TYPE                => 1,
-                                             P_INSP_NAME                => 'Test Name',
-                                             P_INSP_DATE                => SYSDATE,
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => 2,
-                                             P_SITE_INFORMED            => '',
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                P_NOTIFICATION_FROM_ORG    => 1,
+                P_NOTIFICATION_FROM_DIST   => 1,
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => SYSDATE,
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_INSP_RESULT              => 1,
+                P_INSP_CATEGORY            => 1,
+                P_INSP_TYPE                => 1,
+                P_INSP_NAME                => 'Test Name',
+                P_INSP_DATE                => SYSDATE,
+                P_INSP_TIME                => '',
+                P_INSP_OUTCOME             => 2,
+                P_SITE_INFORMED            => '',
+                P_INSP_LOGGED_CALL         => '',
+                P_SAMPLE_SITE              => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_KNOWN_WORKS              => l_known_works,
+                P_REJECTION_REASON         => l_rejection_reason
+        );
 
-         --check a temp inspeciton has been created with an inspection out come of 2
-          -- Compare the two values.
-           utAssert.eq ('Test of SUB_INSPECTION with outcome value',
-                   check_this,
-                   C_YES);
+        --check a temp inspeciton has been created with an inspection out come of 2
+        utAssert.eq ('Test of SUB_INSPECTION with outcome value', check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with outcome value - check inspection outcome on temp inspections ',
+                         'SELECT current_status from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
+                          'I');
 
-           utAssert.eqqueryvalue('Test of SUB_INSPECTION with outcome value - check inspection outcome on temp inspections ',
-                             'SELECT current_status from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
-                              'I');
+        /*****************************************************
+        * Create an inspection with site informed
+        ******************************************************/
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                P_NOTIFICATION_FROM_ORG    => 1,
+                P_NOTIFICATION_FROM_DIST   => 1,
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => SYSDATE,
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_INSP_RESULT              => 1,
+                P_INSP_CATEGORY            => 1,
+                P_INSP_TYPE                => 1,
+                P_INSP_NAME                => 'Test Name',
+                P_INSP_DATE                => SYSDATE,
+                P_INSP_TIME                => '',
+                P_INSP_OUTCOME             => 2,
+                P_SITE_INFORMED            => 0,
+                P_INSP_LOGGED_CALL         => '',
+                P_SAMPLE_SITE              => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_KNOWN_WORKS              => l_known_works,
+                P_REJECTION_REASON         => l_rejection_reason
+        );
 
-      /*****************************************************
-      * Create an inspection with site informed
-      ******************************************************/
-        check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 1,
-                                             P_NOTIFICATION_FROM_DIST   => 1,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => SYSDATE,
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => '',
-                                             P_INSP_RESULT              => 1,
-                                             P_INSP_CATEGORY            => 1,
-                                             P_INSP_TYPE                => 1,
-                                             P_INSP_NAME                => 'Test Name',
-                                             P_INSP_DATE                => SYSDATE,
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => 2,
-                                             P_SITE_INFORMED            => 0,
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
+        --check a temp inspeciton has been created with an inspection out come of 2
+        utAssert.eq ('Test of SUB_INSPECTION with site informed value', check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with site informed - check site informed on temp inspections ',
+                         'SELECT site_informed from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
+                          'N');
 
-         --check a temp inspeciton has been created with an inspection out come of 2
-          -- Compare the two values.
-           utAssert.eq ('Test of SUB_INSPECTION with site informed value',
-                   check_this,
-                   C_YES);
+        /*****************************************************
+        * Create an inspection with an inspection date < March
+        ******************************************************/
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                P_NOTIFICATION_FROM_ORG    => 1,
+                P_NOTIFICATION_FROM_DIST   => 1,
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => SYSDATE,
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_INSP_RESULT              => 1,
+                P_INSP_CATEGORY            => 1,
+                P_INSP_TYPE                => 1,
+                P_INSP_NAME                => 'Test Name',
+                P_INSP_DATE                => TO_DATE('2013/02/01', 'yyyy/mm/dd'),
+                P_INSP_TIME                => '',
+                P_INSP_OUTCOME             => 2,
+                P_SITE_INFORMED            => 0,
+                P_INSP_LOGGED_CALL         => '',
+                P_SAMPLE_SITE              => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_KNOWN_WORKS              => l_known_works,
+                P_REJECTION_REASON         => l_rejection_reason
+        );
 
-            utAssert.eqqueryvalue('Test of SUB_INSPECTION with site informed - check site informed on temp inspections ',
-                             'SELECT site_informed from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
-                              'N');
+        --check a temp inspeciton has been created with an inspection out come of 2
+        utAssert.eq ('Test of SUB_INSPECTION with site date before March ',check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with site date before March , expect year to be one less ',
+                         'SELECT insp_year from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
+                          '2012');
 
-       /*****************************************************
-      * Create an inspection with an inspection date < March
-      ******************************************************/
-        check_this :=
-         ETON_XML_PROCESSING.SUB_INSPECTION (P_NOTIFICATION_FROM_ORG    => 1,
-                                             P_NOTIFICATION_FROM_DIST   => 1,
-                                             P_RECIPIENT_ORG            => '',
-                                             P_RECIPIENT_DIST           => '',
-                                             P_NOTIFICATION_TYPE        => '',
-                                             P_SEQUENCE_NUMBER          => '',
-                                             P_VERSION_CREATED_DATIM    => SYSDATE,
-                                             P_NOTIFICATION_COMMENTS    => '',
-                                             P_WORKS_REFERENCE          => '',
-                                             P_INSP_RESULT              => 1,
-                                             P_INSP_CATEGORY            => 1,
-                                             P_INSP_TYPE                => 1,
-                                             P_INSP_NAME                => 'Test Name',
-                                             P_INSP_DATE                => TO_DATE('2013/02/01', 'yyyy/mm/dd'),
-                                             P_INSP_TIME                => '',
-                                             P_INSP_OUTCOME             => 2,
-                                             P_SITE_INFORMED            => 0,
-                                             P_INSP_LOGGED_CALL         => '',
-                                             P_SAMPLE_SITE              => '',
-                                             P_SUPPLIER_REFERENCE       => '',
-                                             P_ESTIMATE_NUMBER          => '',
-                                             P_INCOMING_XML_ID          => '',
-                                             P_REQUEST_SOURCE_CODE      => '',
-                                             P_SCHEMA_VERSION           => '',
-                                             P_NOTIFICATION_ID          => l_notification_id,
-                                             P_KNOWN_WORKS              => l_known_works,
-                                             P_REJECTION_REASON         => l_rejection_reason);
+        /*****************************************************
+        * test with an failed inspection that creates an event for the "works owner"
+        ******************************************************/
+        l_n_seq_num := 2;
+        l_initial_id := l_initial_id +1;
+        l_ns_id := l_ns_id + 1;
+        l_works_reference := 'BC00000000INSP1';
+        l_works_id := l_works_id +1 ;
+        l_phase_id := l_phase_id +1 ;
 
-         --check a temp inspeciton has been created with an inspection out come of 2
-          -- Compare the two values.
-           utAssert.eq ('Test of SUB_INSPECTION with site date before March ',
-                   check_this,
-                   C_YES);
+        ut_test_util.create_notification_summary (
+                    p_works_id => l_works_id,
+                    P_NOTIFICATION_ID => l_initial_id,
+                    P_NOTIFICATION_TYPE => '2600',
+                    p_notification_summary_id => l_ns_id,
+                    P_NOTIFICATION_SEQUENCE_NUMBER => l_n_seq_num,
+                    p_user_id => 1
+        );
 
-            utAssert.eqqueryvalue('Test of SUB_INSPECTION with site date before March , expect year to be one less ',
-                             'SELECT insp_year from ETON3TEMPINSPECTION where inspection_id = ' || l_notification_id ,
-                              '2012');
+        SELECT count(*) INTO l_inspection_notice_count from INSPECTION_NOTICE;
+        SELECT count(*) INTO l_temp_inspection_count from ETON3ALL_INSPECTION;
+        SELECT count(*) INTO l_notification_summary_count from notification_summary;
+        SELECT count(*) INTO l_event_count from event where user_id = 1;
 
+        check_this := ETON_XML_PROCESSING.SUB_INSPECTION (
+                    P_NOTIFICATION_FROM_ORG    => 1,
+                    P_NOTIFICATION_FROM_DIST   => 1,
+                    P_RECIPIENT_ORG            => '',
+                    P_RECIPIENT_DIST           => '',
+                    P_NOTIFICATION_TYPE        => '2600',
+                    P_SEQUENCE_NUMBER          => '',
+                    P_VERSION_CREATED_DATIM    => SYSDATE,
+                    P_NOTIFICATION_COMMENTS    => '',
+                    P_WORKS_REFERENCE          => l_works_reference,
+                    P_INSP_RESULT              => 1,
+                    P_INSP_CATEGORY            => '9',
+                    P_INSP_TYPE                => 1,
+                    P_INSP_NAME                => 'Test Name',
+                    P_INSP_DATE                => SYSDATE,
+                    P_INSP_TIME                => '',
+                    P_INSP_OUTCOME             => '8',
+                    P_SITE_INFORMED            => '',
+                    P_INSP_LOGGED_CALL         => '',
+                    P_SAMPLE_SITE              => '',
+                    P_SUPPLIER_REFERENCE       => '',
+                    P_ESTIMATE_NUMBER          => '',
+                    P_INCOMING_XML_ID          => '',
+                    P_REQUEST_SOURCE_CODE      => '',
+                    P_SCHEMA_VERSION           => '',
+                    P_NOTIFICATION_ID          => l_notification_id,
+                    P_KNOWN_WORKS              => l_known_works,
+                    P_REJECTION_REASON         => l_rejection_reason
+        );
 
+        -- Assert success
+        utAssert.eq ('Test of SUB_INSPECTION with known works return value', check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check inspection notice created ',
+                         'SELECT count(*) from inspection_notice',
+                          l_inspection_notice_count + 1);
+                          
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check eton3tempinspection notice created ',
+                         'SELECT count(*) from ETON3ALL_INSPECTION',
+                          l_temp_inspection_count + 1);
+        
+        --there should only be a notification summary record created if there is a valid works
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check notification summary IS created ',
+                         'SELECT count(*) from notification_summary',
+                          l_notification_summary_count +1);
 
-      EXCEPTION
+        utAssert.eqqueryvalue('Test of SUB_INSPECTION with known works - check event IS created ',
+                         'SELECT count(*) from event e where e.user_id = 1 and e.event_type = ''212'' and e.priority = ''2'' ',
+                          l_event_count + 1);
+
+    EXCEPTION
         WHEN OTHERS THEN
            dbms_output.put_line('Error in ut_sub_inspection: ' || DBMS_UTILITY.format_error_backtrace);
            RAISE;
+    
+    -- End of test
+    END ut_SUB_INSPECTION;
 
-
-   -- End of test
-   END ut_SUB_INSPECTION;
-
+	
    PROCEDURE ut_SUB_NON_NOTIFIABLE_PHASE
    IS
       -- Verify and complete data types.
@@ -10151,20 +10237,16 @@
    -- End of test
    END ut_SUB_UNATTRIB_WORKS_RESPONSE;
 
-   PROCEDURE ut_SUB_WORKS_COMMENTS
-   IS
-     -- Verify and complete data types.
-       against_this   VARCHAR2 (2000);
-       check_this     VARCHAR2 (2000);
-       rejection_reason VARCHAR2(200);
-       p_notification_id NUMBER(10);
-       l_rejection_reason  VARCHAR2(200);
-       old_notification_id NUMBER(10);
-   BEGIN
-
+    PROCEDURE ut_SUB_WORKS_COMMENTS
+    IS
+        check_this     VARCHAR2 (2000);
+        rejection_reason VARCHAR2(200);
+        p_notification_id NUMBER(10);
+        l_rejection_reason  VARCHAR2(200);
+    BEGIN
         --set the ids high so it wont be overwritten in a fresh  build
         l_works_reference := 'BC0000000000020';
-
+        
         l_n_seq_num := 1;
         l_initial_id := l_initial_id +1;
         l_ns_id := l_ns_id + 1;
@@ -10171,29 +10253,26 @@
         l_phase_id := l_phase_id +1;
         l_works_id := l_works_id +1;
         l_forward_id := l_forward_id +1;
-
-
+        
         ut_test_util.create_phase(p_works_reference =>l_works_reference,
                                p_works_id        =>l_works_id,
                                p_phase_id        => l_phase_id);
-
+        
         ut_test_util.CREATE_WORKS(p_works_reference  =>l_works_reference,
                                p_works_id         =>l_works_id,
                                p_current_phase_id =>l_phase_id,
                                p_swa_org_ref      => '0001',
                                p_user_id => 60);
-
-
+    
         /****************************************************************
+        *
         * Invalid Sender contractor
         *
         ***************************************************************/
-
-      -- Define "control" operation
-      against_this := NULL;
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+        
+        -- Execute test code
+        check_this :=
+        ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
             P_NOTIFICATION_FROM_ORG    => '66',
             P_NOTIFICATION_FROM_DIST   => '1',
             P_RECIPIENT_ORG            => '',
@@ -10209,150 +10288,142 @@
             P_REQUEST_SOURCE_CODE      => 1, --contractor
             P_SCHEMA_VERSION           => '',
             P_NOTIFICATION_ID          =>  l_notification_id,
-            P_REJECTION_REASON         => l_rejection_reason);
-
-
-      utAssert.eq ('Test of SUB_works_comments invalid sender - return value ' ,
-                   check_this,
-                   C_NO);
-
-       utAssert.eq ('Test of  SUB_works_comments invalid sender - rejection reason ' || l_rejection_reason,
-                   'Could not determine userid for org - 66, District - 1',
-                   l_rejection_reason);
-
-
-       /****************************************************************
+            P_REJECTION_REASON         => l_rejection_reason
+        );
+        
+        utAssert.eq ('Test of SUB_works_comments invalid sender - return value ' ,
+               check_this,
+               C_NO);
+        
+        utAssert.eq ('Test of  SUB_works_comments invalid sender - rejection reason ' || l_rejection_reason,
+               'Could not determine userid for org - 66, District - 1',
+               l_rejection_reason);
+    
+        /****************************************************************
         * Invalid Recipient contractor
         ***************************************************************/
-
-      -- Define "control" operation
-      against_this := NULL;
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
-            P_NOTIFICATION_FROM_ORG    => '6',
-            P_NOTIFICATION_FROM_DIST   => '1',
-            P_RECIPIENT_ORG            => '66',
-            P_RECIPIENT_DIST           => '1',
-            P_NOTIFICATION_TYPE        => '',
-            P_SEQUENCE_NUMBER          => '',
-            P_VERSION_CREATED_DATIM    => '',
-            P_NOTIFICATION_COMMENTS    => '',
-            P_WORKS_REFERENCE          => '',
-            P_SUPPLIER_REFERENCE       => '',
-            P_ESTIMATE_NUMBER          => '',
-            P_INCOMING_XML_ID          => '',
-            P_REQUEST_SOURCE_CODE      => 1, --contractor
-            P_SCHEMA_VERSION           => '',
-            P_NOTIFICATION_ID          =>  l_notification_id,
-            P_REJECTION_REASON         => l_rejection_reason);
-
-
-      utAssert.eq ('Test of SUB_works_comments invalid recipient - return value ' ,
-                   check_this,
-                   C_NO);
-
-       utAssert.eq ('Test of  SUB_works_comments invalid recipient - rejection reason ' || l_rejection_reason,
-                   'Could not determine recipient for org - 66, District - 1',
-                   l_rejection_reason);
-
-
-
+        
+        -- Execute test code
+        check_this :=
+            ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+                P_NOTIFICATION_FROM_ORG    => '6',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '66',
+                P_RECIPIENT_DIST           => '1',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => 1, --contractor
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          =>  l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+        
+        
+        utAssert.eq ('Test of SUB_works_comments invalid recipient - return value ' ,
+               check_this,
+               C_NO);
+        
+        utAssert.eq ('Test of  SUB_works_comments invalid recipient - rejection reason ' || l_rejection_reason,
+               'Could not determine recipient for org - 66, District - 1',
+               l_rejection_reason);
+    
         /****************************************************************
+        * 
         * Invalid SenderHA
         *
         ***************************************************************/
-
-      -- Define "control" operation
-      against_this := NULL;
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
-            P_NOTIFICATION_FROM_ORG    => '66',
-            P_NOTIFICATION_FROM_DIST   => '1',
-            P_RECIPIENT_ORG            => '',
-            P_RECIPIENT_DIST           => '',
-            P_NOTIFICATION_TYPE        => '',
-            P_SEQUENCE_NUMBER          => '',
-            P_VERSION_CREATED_DATIM    => '',
-            P_NOTIFICATION_COMMENTS    => '',
-            P_WORKS_REFERENCE          => '',
-            P_SUPPLIER_REFERENCE       => '',
-            P_ESTIMATE_NUMBER          => '',
-            P_INCOMING_XML_ID          => '',
-            P_REQUEST_SOURCE_CODE      => '3', --HA
-            P_SCHEMA_VERSION           => '',
-            P_NOTIFICATION_ID          =>  l_notification_id,
-            P_REJECTION_REASON         => l_rejection_reason);
-
-
-      utAssert.eq ('Test of SUB_works_comments invalid sender HA - return value ' ,
-                   check_this,
-                   C_NO);
-
-       utAssert.eq ('Test of  SUB_works_comments invalid sender HA - rejection reason ' || l_rejection_reason,
-                   'Could not determine recipient for org - 66, District - 1',
-                   l_rejection_reason);
-
-
+        
+        -- Execute test code
+        check_this :=
+            ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+                P_NOTIFICATION_FROM_ORG    => '66',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '3', --HA
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          =>  l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+        
+        utAssert.eq ('Test of SUB_works_comments invalid sender HA - return value ' ,
+               check_this,
+               C_NO);
+        
+        utAssert.eq ('Test of  SUB_works_comments invalid sender HA - rejection reason ' || l_rejection_reason,
+               'Could not determine recipient for org - 66, District - 1',
+               l_rejection_reason);
+    
         /****************************************************************
-        *Valid Sender Contractor
         *
+        * Valid Sender Contractor
+        *
         ***************************************************************/
-
-      -- Define "control" operation
-      against_this := NULL;
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
-            P_NOTIFICATION_FROM_ORG    => '6',
-            P_NOTIFICATION_FROM_DIST   => '1',
-            P_RECIPIENT_ORG            => '1',
-            P_RECIPIENT_DIST           => '1',
-            P_NOTIFICATION_TYPE        => '',
-            P_SEQUENCE_NUMBER          => '',
-            P_VERSION_CREATED_DATIM    => '',
-            P_NOTIFICATION_COMMENTS    => '',
-            P_WORKS_REFERENCE          => l_works_reference,
-            P_SUPPLIER_REFERENCE       => '',
-            P_ESTIMATE_NUMBER          => '',
-            P_INCOMING_XML_ID          => '',
-            P_REQUEST_SOURCE_CODE      => '1', --contractor
-            P_SCHEMA_VERSION           => '',
-            P_NOTIFICATION_ID          =>  l_notification_id,
-            P_REJECTION_REASON         => l_rejection_reason);
-
-
-       utAssert.eq ('Test of SUB_works_comments valid sender - return value ' ,
+        
+        -- Execute test code
+        check_this :=
+            ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+                P_NOTIFICATION_FROM_ORG    => '6',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '1',
+                P_RECIPIENT_DIST           => '1',
+                P_NOTIFICATION_TYPE        => '',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => l_works_reference,
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '1', --contractor
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          =>  l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+        
+        
+        utAssert.eq ('Test of SUB_works_comments valid sender - return value ' ,
                    check_this,
                    C_YES);
-
-       -- check phase has works_comments flag updated
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender ,  check that fpn record has been created ' ,
+        
+        -- check phase has works_comments flag updated
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender ,  check that fpn record has been created ' ,
                              'SELECT works_comment_flag from works where works_id = ' || l_works_id ,
                               'Y');
-
-       -- check a works_comment record has been created
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender ,  check that works_comment record has been created ' ,
+        
+        -- check a works_comment record has been created
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender ,  check that works_comment record has been created ' ,
                              'SELECT count(*) from works_comments where works_comments_id = ' || l_notification_id ,
                               1);
-
-      --check notification summary record created
-
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender notification_id = ' || l_notification_id ,
+        
+        --check notification summary record created
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender notification_id = ' || l_notification_id ,
                               'select count(*) from notification_summary where notification_id = ' || l_notification_id,
                               1);
-
-
-
-
+    
         /****************************************************************
-        *Valid SenderHA
+        * 
+        * Valid SenderHA
         *
         ***************************************************************/
-
+        
         l_works_reference := 'BC0000000000021';
-
+        
         l_n_seq_num := 1;
         l_initial_id := l_initial_id +1;
         l_ns_id := l_ns_id + 1;
@@ -10359,69 +10430,144 @@
         l_phase_id := l_phase_id +1;
         l_works_id := l_works_id +1;
         l_forward_id := l_forward_id +1;
-
-
+        
         ut_test_util.create_phase(p_works_reference =>l_works_reference,
                                p_works_id        =>l_works_id,
                                p_phase_id        => l_phase_id);
-
+        
         ut_test_util.CREATE_WORKS(p_works_reference  =>l_works_reference,
                                p_works_id         =>l_works_id,
                                p_current_phase_id =>l_phase_id,
                                p_swa_org_ref      => '0001',
                                p_user_id => 60);
-      -- Define "control" operation
-      against_this := NULL;
-      -- Execute test code
-      check_this :=
-         ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
-            P_NOTIFICATION_FROM_ORG    => '1',
-            P_NOTIFICATION_FROM_DIST   => '1',
-            P_RECIPIENT_ORG            => '6',
-            P_RECIPIENT_DIST           => '1',
-            P_NOTIFICATION_TYPE        => '1500',
-            P_SEQUENCE_NUMBER          => '',
-            P_VERSION_CREATED_DATIM    => '',
-            P_NOTIFICATION_COMMENTS    => '',
-            P_WORKS_REFERENCE          => l_works_reference,
-            P_SUPPLIER_REFERENCE       => '',
-            P_ESTIMATE_NUMBER          => '',
-            P_INCOMING_XML_ID          => '',
-            P_REQUEST_SOURCE_CODE      => '3', --HA
-            P_SCHEMA_VERSION           => '',
-            P_NOTIFICATION_ID          =>  l_notification_id,
-            P_REJECTION_REASON         => l_rejection_reason);
-
-
-       utAssert.eq ('Test of SUB_works_comments valid sender HA - return value ' || l_rejection_reason,
+        -- Execute test code
+        check_this :=
+            ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+                P_NOTIFICATION_FROM_ORG    => '1',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '6',
+                P_RECIPIENT_DIST           => '1',
+                P_NOTIFICATION_TYPE        => '1500',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => l_works_reference,
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '3', --HA
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          =>  l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+    
+    
+        utAssert.eq ('Test of SUB_works_comments valid sender HA - return value ' || l_rejection_reason,
                    check_this,
                    C_YES);
-
-       -- check phase has works_comments flag updated
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA ,  check that fpn record has been created ' ,
+        
+        -- check phase has works_comments flag updated
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA ,  check that fpn record has been created ' ,
                              'SELECT works_comment_flag from works where works_id = ' || l_works_id ,
                               'Y');
-
-       -- check a works_comment record has been created
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA,  check that works_comment record has been created ' ,
+        
+        -- check a works_comment record has been created
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA,  check that works_comment record has been created ' ,
                              'SELECT count(*) from works_comments where works_comments_id = ' || l_notification_id ,
                               1);
-
-      --check notification summary record created
-
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA notification_id = ' || l_notification_id ,
+    
+        --check notification summary record created
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA notification_id = ' || l_notification_id ,
                               'select count(*) from notification_summary where notification_id = ' || l_notification_id,
                               1);
-
-       --check event has been created
-
-       utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA,  check that event record has been created',
+    
+        --check event has been created
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments valid sender HA,  check that event record has been created',
                              'SELECT count(*) from event where item_id = ' || l_notification_id ,
                               1);
+    
+        /****************************************************************
+        *
+        * Comment for defective apparatus
+        *
+        ***************************************************************/
+        
+        l_works_reference := 'CM001CRN730';
+        
+        check_this :=
+            ETON_XML_PROCESSING.SUB_UNATTRIB_WORKS (
+                P_NOTIFICATION_FROM_ORG    => '1',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '',
+                P_RECIPIENT_DIST           => '',
+                P_NOTIFICATION_TYPE        => '1901',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => l_works_reference,
+                P_USRN                     => 0,
+                P_LOCATION_FEATURE_TYPE    => '',
+                P_LOCATION_DESCRIPTION     => '',
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '',
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          => l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+    
+        utAssert.eq ('Test of sub_works_comments defective apparatus, assert setup defect ' || l_rejection_reason, check_this, C_YES);
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments defective apparatus, assert setup : defect record created in unattributable_works',
+                             'SELECT count(*) from unattributable_works where uaw_id = ' || l_notification_id,
+                              1);
+    
+        -- link works with unattributable_works_link and user
+        insert into unattributable_works_link (UAWL_ID, unattrib_works_id, user_id, DATIM) values (l_notification_id, l_notification_id, 60, SYSDATE);
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments defective apparatus, assert setup : defect linked to user',
+                             'SELECT count(*) from unattributable_works_link where unattrib_works_id = ' || l_notification_id,
+                              1);
+    
+        -- Execute test code
+        check_this :=
+            ETON_XML_PROCESSING.SUB_WORKS_COMMENTS (
+                P_NOTIFICATION_FROM_ORG    => '1',
+                P_NOTIFICATION_FROM_DIST   => '1',
+                P_RECIPIENT_ORG            => '6',
+                P_RECIPIENT_DIST           => '1',
+                P_NOTIFICATION_TYPE        => '1500',
+                P_SEQUENCE_NUMBER          => '',
+                P_VERSION_CREATED_DATIM    => '',
+                P_NOTIFICATION_COMMENTS    => '',
+                P_WORKS_REFERENCE          => l_works_reference,
+                P_SUPPLIER_REFERENCE       => '',
+                P_ESTIMATE_NUMBER          => '',
+                P_INCOMING_XML_ID          => '',
+                P_REQUEST_SOURCE_CODE      => '3', --HA
+                P_SCHEMA_VERSION           => '',
+                P_NOTIFICATION_ID          =>  l_notification_id,
+                P_REJECTION_REASON         => l_rejection_reason
+            );
+    
+        utAssert.eq ('Test of sub_works_comments defective apparatus - return value ' || l_rejection_reason,
+                   check_this,
+                   C_YES);
+        
+        utAssert.eqqueryvalue('Test of sub_works_comments defective apparatus, assert that record inserted into table event',
+                             'SELECT count(*) from event where item_id = ' || l_notification_id ,
+                              1);
+        
+        utAssert.eqquery('Test of sub_works_comments defective apparatus,  assert event record has been created for linked user',
+                             'SELECT user_id, EVENT_TYPE from event where item_id = ' || l_notification_id ,
+                              'select 60, 206 from dual');
+        
+    -- End of test
+    END ut_SUB_WORKS_COMMENTS;
 
-   -- End of test
-   END ut_SUB_WORKS_COMMENTS;
-
    PROCEDURE ut_SUB_WORKS_STATUS_CORR
    IS
        -- Verify and complete data types.
Index: OD File/0030_OD.xml
===================================================================
--- OD File/0030_OD.xml	(revision 6801)
+++ OD File/0030_OD.xml	(revision 7124)
@@ -287,7 +287,7 @@
       <DistrictFunction>3</DistrictFunction>
       <DistrictFTPdirectory>incoming</DistrictFTPdirectory> 
       <DistrictFTPserverName>ftp.swns.bt.com</DistrictFTPserverName> 
-      <DistrictNotificationsURL>http://webservices.telent.com/swns_ct_eton/ws_eton.asmx</DistrictNotificationsURL>
+      <DistrictNotificationsURL>http://www.swns.bt.com/EToNHAServices/EToNSoap12</DistrictNotificationsURL>
       <AttachmentURLprefix>http://www.swns.bt.com/attachments/</AttachmentURLprefix>
       <DistrictFaxNumber>01332 822444</DistrictFaxNumber>
       <DistrictPostalAddress>
